package com.tudor.imgur.util;

import com.tudor.imgur.Main;

import android.content.Context;
import android.os.AsyncTask;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.RelativeLayout;

public class ImgurLogin {

	View RootLayout;
	Context context;
	
	public ImgurLogin(View rootLayout, Context context) {
		this.RootLayout = rootLayout;
		this.context = context;
	}

	public void getPin(){
		String URL = "https://api.imgur.com/oauth2/authorize?client_id="+
				 Constants.CLIENT_ID + "&response_type=pin&state=no_state";
	
		WebView imgurLogin = new WebView(context);
		imgurLogin.setWebViewClient(new WebViewClient() {
			@Override
			public void onPageFinished(WebView view, String url) {
				super.onPageFinished(view, url);
				String loadedURL = view.getUrl();
				if(loadedURL.startsWith(Constants.IMUGUR_PIN_URL)){
					String kvps[] = loadedURL.split("\\?")[1].split("&");
					for(String kvp : kvps){
						if(kvp.startsWith("pin")){
							String PIN = kvp.split("=")[1];
							Main.setPIN(PIN);
							Main.onPinLoaded();
							((RelativeLayout)RootLayout).removeView(view);
						}
					}
				}
			}
	
			@Override
			public boolean shouldOverrideUrlLoading(WebView view, String url) {
				view.loadUrl(url);
				return true;
			}
	
			@Override
			public void onReceivedError(WebView view, int errorCode,
					String description, String failingUrl) {
				// TODO Auto-generated method stub
				super.onReceivedError(view, errorCode, description, failingUrl);
			}
		});
		imgurLogin.loadUrl(URL);
		//System.out.println(imgurLogin.getTitle());
		((ViewGroup) RootLayout).addView(imgurLogin);
	}
	
	public void getOAuth2Token(String PIN){
		new AsyncTask<String, Void, String>() {
		    protected void onPreExecute() {
		        // perhaps show a dialog 
		        // with a progress bar
		        // to let your users know
		        // something is happening
		    }

		    protected String doInBackground(String... aParams) {
				return "";
		        // do some expensive work 
		        // in the background here
		    }

		    protected void onPostExecute(String aResult) {
		        // background work is finished, 
		        // we can update the UI here
		        // including removing the dialog
		    }
		}.execute();
	}
}
